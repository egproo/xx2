<?php
use Illuminate\Support\Facades\Schema;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Database\Migrations\Migration;

class CreateEventLogsTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('event_logs', function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->unsignedBigInteger('store_id');
            $table->string('event_name');
            $table->json('event_data');
            $table->timestamps();

            $table->foreign('store_id')->references('id')->on('stores')->onDelete('cascade');
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('event_logs');
    }
}
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateCustomerGroupCustomerTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('customer_group_customer', function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->unsignedBigInteger('customer_id');
            $table->unsignedBigInteger('customer_group_id');
            $table->timestamps();

            $table->foreign('customer_id')->references('id')->on('customers')->onDelete('cascade');
            $table->foreign('customer_group_id')->references('id')->on('customer_groups')->onDelete('cascade');
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('customer_group_customer');
    }
}
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreatePoTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('customer_groups', function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->unsignedBigInteger('salla_id');
            $table->unsignedBigInteger('store_id');
            $table->string('name');
            $table->json('conditions')->nullable();
            $table->timestamps();
        });
        Schema::create('customers', function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->unsignedBigInteger('salla_id');
            $table->unsignedBigInteger('store_id');
            $table->string('first_name');
            $table->string('last_name');
            $table->bigInteger('mobile');
            $table->string('mobile_code');
            $table->string('email')->nullable();
            $table->string('avatar')->nullable();
            $table->enum('gender', ['male', 'female'])->nullable();
            $table->date('birthday')->nullable();
            $table->string('city')->nullable();
            $table->string('country')->nullable();
            $table->string('country_code')->nullable();
            $table->string('currency')->nullable();
            $table->string('location')->nullable();
            $table->timestamps();
        });	
Schema::create('categories', function (Blueprint $table) {
    $table->bigIncrements('id');
    $table->unsignedBigInteger('salla_id');
    $table->unsignedBigInteger('store_id');
    $table->string('name');
	$table->string('metadata_title')->nullable();
	$table->text('metadata_description')->nullable();
	$table->string('metadata_url')->nullable();	
    $table->text('description')->nullable();
    $table->timestamps();
    
    $table->foreign('store_id')->references('id')->on('stores');
});		
Schema::create('brands', function (Blueprint $table) {
    $table->bigIncrements('id');
    $table->unsignedBigInteger('salla_id');
    $table->unsignedBigInteger('store_id');	
    $table->string('name');
    $table->text('description')->nullable();
    $table->string('banner')->nullable();
    $table->string('logo')->nullable();
    $table->string('ar_char')->nullable();
    $table->string('en_char')->nullable();
    $table->timestamps();
    $table->foreign('store_id')->references('id')->on('stores');
	
});

        // جدول المنتجات
        Schema::create('products', function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->unsignedBigInteger('salla_id');
            $table->unsignedBigInteger('store_id');
            $table->string('name');
            $table->string('type');
            $table->string('sku')->nullable();
            $table->decimal('price', 8, 2);
            $table->decimal('discount_price', 8, 2)->nullable();
            $table->text('description')->nullable();
            $table->unsignedBigInteger('category_id');
            $table->integer('stock_quantity');
            $table->enum('status', ['active', 'inactive']);
            $table->timestamps();
            $table->foreign('category_id')->references('id')->on('categories');
            $table->foreign('store_id')->references('id')->on('stores');
        });

        // جدول الإصدارات المختلفة للمنتجات
        Schema::create('product_variants', function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->unsignedBigInteger('product_id');
            $table->string('name');
            $table->string('sku')->nullable();
            $table->decimal('price', 8, 2);
            $table->decimal('discount_price', 8, 2)->nullable();
            $table->integer('stock_quantity');
            $table->timestamps();
            
            $table->foreign('product_id')->references('id')->on('products');
        });

        // جدول خيارات المنتج
        Schema::create('product_options', function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->unsignedBigInteger('product_id');
            $table->string('name');
            $table->string('type');  // مثل: color, size, etc.
            $table->timestamps();
            
            $table->foreign('product_id')->references('id')->on('products');
        });

        // جدول قيم خيارات المنتج
        Schema::create('product_option_values', function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->unsignedBigInteger('product_option_id');
            $table->string('name');
            $table->decimal('price', 8, 2)->nullable();  // قد يكون هناك سعر إضافي لبعض الخيارات
            $table->timestamps();
			$table->string('display_value')->nullable()->after('name');
			$table->string('image_url')->nullable()->after('price');
			$table->string('hashed_display_value')->nullable()->after('image_url');
			$table->boolean('is_default')->default(false)->after('hashed_display_value');          
            $table->foreign('product_option_id')->references('id')->on('product_options');
        });
		Schema::table('product_option_values', function (Blueprint $table) {

});

	// جدول صور المنتج
        Schema::create('product_images', function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->unsignedBigInteger('product_id');
            $table->string('image_path');
            $table->string('alt_text')->nullable();
            $table->timestamps();
            
            $table->foreign('product_id')->references('id')->on('products');
        });
        // جدول حالات الطلب
		Schema::create('order_statuses', function (Blueprint $table) {
			$table->bigIncrements('id');
			$table->unsignedBigInteger('salla_id');
			$table->string('name');
			$table->string('type');
			$table->string('slug');
			$table->text('message')->nullable();
			$table->string('color');
			$table->string('icon');
			$table->integer('sort')->nullable();
			$table->boolean('is_active')->default(true);
			$table->unsignedBigInteger('parent_id')->nullable();
			$table->timestamps();
			
			$table->foreign('parent_id')->references('id')->on('order_statuses')->onDelete('set null');
		});
		
	// جدول الطلبات
        Schema::create('orders', function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->unsignedBigInteger('salla_id');
            $table->unsignedBigInteger('store_id');
            $table->unsignedBigInteger('customer_id');
            $table->unsignedBigInteger('status_id');
            $table->decimal('total_price', 8, 2);
            $table->decimal('shipping_cost', 8, 2);
            $table->string('payment_method');
            $table->string('shipping_method');
            $table->timestamp('order_date')->nullable();
            $table->timestamps();
            
            $table->foreign('store_id')->references('id')->on('stores');
            $table->foreign('customer_id')->references('id')->on('customers');
            $table->foreign('status_id')->references('id')->on('order_statuses');
        });

	// جدول عناصر الطلب
        Schema::create('order_items', function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->unsignedBigInteger('order_id');
            $table->unsignedBigInteger('product_id');
            $table->integer('quantity');
            $table->decimal('price', 8, 2);
            $table->timestamps();
            
            $table->foreign('order_id')->references('id')->on('orders');
            $table->foreign('product_id')->references('id')->on('products');
        });



		// جدول تاريخ الطلبات
// جدول تاريخ الطلبات
Schema::create('order_history', function (Blueprint $table) {
    $table->bigIncrements('id');
    $table->unsignedBigInteger('order_id');
    $table->string('status'); // الحالة كنص يتوافق مع بنية JSON
    $table->text('note')->nullable(); // ملاحظة حول تغيير الحالة
    $table->timestamps(); // يتضمن created_at و updated_at
    
    $table->foreign('order_id')->references('id')->on('orders');
});



        // جدول وسائل الدفع للطلب
        Schema::create('order_payments', function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->unsignedBigInteger('order_id');
            $table->string('payment_method');
            $table->decimal('amount', 8, 2);
            $table->timestamp('payment_date')->nullable();
            $table->timestamps();
            
            $table->foreign('order_id')->references('id')->on('orders');
        });

        // جدول شحنات الطلب
        Schema::create('order_shipments', function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->unsignedBigInteger('order_id');
            $table->string('shipment_method');
            $table->string('tracking_number')->nullable();
            $table->timestamp('shipment_date')->nullable();
            $table->timestamps();
            
            $table->foreign('order_id')->references('id')->on('orders');
        });

        // جدول وسوم الطلب
        Schema::create('order_tags', function (Blueprint $table) {
            $table->bigIncrements('id');
            $table->unsignedBigInteger('salla_id');
            $table->string('name');
            $table->timestamps();
        });
		Schema::create('order_order_tag', function (Blueprint $table) {
			$table->unsignedBigInteger('order_id');
			$table->unsignedBigInteger('order_tag_id');
			$table->timestamps();
			
			$table->foreign('order_id')->references('id')->on('orders')->onDelete('cascade');
			$table->foreign('order_tag_id')->references('id')->on('order_tags')->onDelete('cascade');

			$table->primary(['order_id', 'order_tag_id']);
		});
		
		Schema::create('order_invoices', function (Blueprint $table) {
			$table->bigIncrements('id');
			$table->unsignedBigInteger('salla_id');
			$table->unsignedBigInteger('order_id');
			$table->string('type');
			$table->string('invoice_number')->nullable();
			$table->decimal('sub_total', 10, 2);
			$table->decimal('shipping_cost', 10, 2)->nullable();
			$table->decimal('cod_cost', 10, 2)->nullable();
			$table->decimal('discount', 10, 2)->nullable();
			$table->decimal('tax', 10, 2);
			$table->decimal('tax_value', 10, 2);
			$table->decimal('total', 10, 2);
			$table->date('date')->nullable();
			$table->timestamps();
			
			$table->foreign('order_id')->references('id')->on('orders');
		});
		
		
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('order_tags');
        Schema::dropIfExists('order_shipments');
        Schema::dropIfExists('order_payments');
        Schema::dropIfExists('order_history');
        Schema::dropIfExists('order_items');
        Schema::dropIfExists('orders');
        Schema::dropIfExists('order_statuses');		
        Schema::dropIfExists('product_images');
        Schema::dropIfExists('product_option_values');
        Schema::dropIfExists('product_options');
        Schema::dropIfExists('product_variants');
        Schema::dropIfExists('products');
        Schema::dropIfExists('categories');
        Schema::dropIfExists('customers');
        Schema::dropIfExists('customer_groups');
		
    }
}
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateTokenHistoryTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('token_history', function (Blueprint $table) {
            $table->id();
            $table->unsignedBigInteger('store_id');
            $table->text('access_token');
            $table->text('refresh_token');
            $table->timestamps();

            $table->foreign('store_id')->references('id')->on('stores')->onDelete('cascade');
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('token_history');
    }
}
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::create('users', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('email')->unique();
            $table->timestamp('email_verified_at')->nullable();
            $table->string('password');
            $table->rememberToken();
            $table->timestamps();
        });
		
    // جدول تخزين بيانات المتجر
	Schema::create('stores', function (Blueprint $table) {
		$table->bigIncrements('id');
		$table->unsignedBigInteger('salla_id');
		$table->string('code')->nullable();
		$table->string('state')->nullable();
		$table->string('name');
		$table->string('entity');
		$table->string('email');
		$table->string('avatar')->nullable();
		$table->string('plan');
		$table->string('status');
		$table->boolean('verified');
		$table->string('currency');
		$table->string('domain');
		$table->text('description')->nullable();
		$table->json('licenses')->nullable();
		$table->json('social')->nullable();
		$table->timestamps();
	});	
Schema::create('store_tokens', function (Blueprint $table) {
    $table->bigIncrements('id');
    $table->unsignedBigInteger('store_id');
    $table->foreign('store_id')->references('id')->on('stores');
    $table->text('access_token');
    $table->text('refresh_token');
    $table->unsignedBigInteger('expires_in');
    $table->string('token_type');
    $table->text('scope');
    $table->timestamps();
});	
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
		Schema::dropIfExists('store_tokens');
		Schema::dropIfExists('stores');	
		Schema::dropIfExists('users');	

    }
};
